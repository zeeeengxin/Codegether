{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/app.routes.ts","webpack:///./src/app/components/editor/editor.component.css","webpack:///./src/app/components/editor/editor.component.html","webpack:///./src/app/components/editor/editor.component.ts","webpack:///./src/app/components/navbar/navbar.component.css","webpack:///./src/app/components/navbar/navbar.component.html","webpack:///./src/app/components/navbar/navbar.component.ts","webpack:///./src/app/components/new-problem/new-problem.component.css","webpack:///./src/app/components/new-problem/new-problem.component.html","webpack:///./src/app/components/new-problem/new-problem.component.ts","webpack:///./src/app/components/problem-detail/problem-detail.component.css","webpack:///./src/app/components/problem-detail/problem-detail.component.html","webpack:///./src/app/components/problem-detail/problem-detail.component.ts","webpack:///./src/app/components/problem-list/problem-list.component.css","webpack:///./src/app/components/problem-list/problem-list.component.html","webpack:///./src/app/components/problem-list/problem-list.component.ts","webpack:///./src/app/services/collaboration.service.ts","webpack:///./src/app/services/data.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\"","module.exports = \"<app-navbar></app-navbar>\\n<router-outlet></router-outlet>\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'app';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { DataService } from './services/data.service';\nimport { CollaborationService } from './services/collaboration.service';\n\nimport { routing } from './app.routes';\nimport { AppComponent } from './app.component';\nimport { ProblemListComponent } from './components/problem-list/problem-list.component';\nimport { ProblemDetailComponent } from './components/problem-detail/problem-detail.component';\nimport { NewProblemComponent } from './components/new-problem/new-problem.component';\nimport { NavbarComponent } from './components/navbar/navbar.component';\nimport { EditorComponent } from './components/editor/editor.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    ProblemListComponent,\n    ProblemDetailComponent,\n    NewProblemComponent,\n    NavbarComponent,\n    EditorComponent\n  ],\n  imports: [\n    BrowserModule,\n    routing,\n    FormsModule,\n    HttpClientModule\n  ],\n  providers: [\n    DataService,\n    CollaborationService\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Routes, RouterModule } from '@angular/router';\n\nimport { ProblemListComponent } from './components/problem-list/problem-list.component';\nimport { ProblemDetailComponent } from './components/problem-detail/problem-detail.component';\nimport { NewProblemComponent } from './components/new-problem/new-problem.component';\n\nconst routes: Routes = [\n      {\n        path: '',\n        redirectTo: 'codegether/problems',\n        pathMatch: 'full'\n      },\n      {\n        path: 'codegether/problems',\n        children: [\n          {\n            path: 'new',\n            component: NewProblemComponent\n          },\n          {\n            path: ':id',\n            component: ProblemDetailComponent\n          },\n          {\n            path: '',\n            component: ProblemListComponent\n          }\n        ]\n      },\n      {\n        path: '**',\n        redirectTo: 'codegether/problems'\n      }\n];\n\nexport const routing = RouterModule.forRoot(routes);","module.exports = \"@media screen {\\n  #editor {\\n    height: 600px;\\n  }\\n  .lang-select {\\n    width: 100px;\\n    margin-right: 10px;\\n  }\\n  header .btn {\\n    margin: 0 5px;\\n  }\\n  footer .btn {\\n    margin: 0 5px;\\n  }\\n  .editor-footer, .editor-header {\\n    margin: 10px 0;\\n  }\\n  .cursor {\\n    /*position:absolute;*/\\n    background: rgba(0, 250, 0, 0.5);\\n    z-index: 40;\\n    width: 2px!important;\\n  }\\n}\"","module.exports = \"<section>\\n  <header class=\\\"editor-header\\\">\\n    <select class=\\\"form-control pull-left lang-select\\\" name=\\\"language\\\" [(ngModel)]=\\\"language\\\" (change)=\\\"setLanguage(language)\\\">\\n      <option *ngFor=\\\"let language of languages\\\" [value]=\\\"language\\\">\\n        {{language}}\\n      </option>\\n    </select>\\n\\n    <button type=\\\"button\\\" class=\\\"btn btn-default\\\" data-toggle=\\\"modal\\\" data-target=\\\"#myModal\\\">\\n      <span class=\\\"glyphicon glyphicon-refresh\\\" aria-hidden=\\\"true\\\"></span>\\n    </button>\\n    <div class=\\\"modal fade\\\" id=\\\"myModal\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"myModalLabel\\\">\\n      <div class=\\\"modal-dialog\\\" role=\\\"document\\\">\\n        <div class=\\\"modal-content\\\">\\n          <div class=\\\"modal-header\\\">\\n            <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-label=\\\"Close\\\"><span aria-hidden=\\\"true\\\">&times;</span></button>\\n            <h4 class=\\\"modal-title\\\" id=\\\"myModalLabel\\\">Reset</h4>\\n          </div>\\n          <div class=\\\"modal-body\\\">\\n            You will lose current code in the window, are you sure?\\n          </div>\\n          <div class=\\\"modal-footer\\\">\\n            <button type=\\\"button\\\" class=\\\"btn btn-success\\\" data-dismiss=\\\"modal\\\" (click)=\\\"resetEditor()\\\">Reset</button>\\n            <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" data-dismiss=\\\"modal\\\">Cancel</button>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n  </header>\\n\\n  <div class=\\\"row\\\">\\n    <div id=\\\"editor\\\"></div>\\n  </div>\\n  <div>\\n    {{output}}\\n  </div>\\n  \\n  <footer class=\\\"editor-footer\\\">\\n    <button type=\\\"button\\\" class=\\\"btn btn-success pull-right\\\" (click)=\\\"submit()\\\">Submit</button>\\n  </footer>\\n  </section>\\n\\n\\n\"","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Params } from '@angular/router';\nimport { CollaborationService } from '../../services/collaboration.service';\nimport { DataService } from '../../services/data.service';\n\ndeclare const ace: any;\n\n@Component({\n  selector: 'app-editor',\n  templateUrl: './editor.component.html',\n  styleUrls: ['./editor.component.css']\n})\nexport class EditorComponent implements OnInit {\n    sessionId: string;\n    editor: any;\n    languages: string[] = ['Java', 'Python'];\n    language: string = 'Java';\n    output: string = '';\n    \n    defaultContent = {\n        'Java': `public class Example {\n            public static void main(String[] args) {\n                // Type your Java code here\n            }\n        }`,\n        'Python': `class Example:\n        def example():\n            # Write your Python code here`\n    };\n    \n    constructor(private collaboration: CollaborationService, private route: ActivatedRoute, private dataService: DataService) { }\n\n    ngOnInit() {\n        this.route.params.subscribe(params => {\n            this.sessionId = params['id'];\n            this.initEditor();\n            this.collaboration.restoreBuffer();\n        });\n    }\n\n    initEditor() {\n      this.editor = ace.edit(\"editor\");\n      this.editor.setTheme(\"ace/theme/eclipse\");\n      this.resetEditor();\n        this.editor.$blockScrolling = Infinity;\n        // set up collaboration socket\n      this.collaboration.init(this.editor, this.sessionId);\n      this.editor.lastAppliedChange = null;  \n// register change callback\n        this.editor.on('change', (e) => {\n            if (this.editor.lastAppliedChange != e) {\n                this.collaboration.change(JSON.stringify(e));\n            } \n        });\n    }\n    \n    resetEditor(): void {\n        this.editor.setValue(this.defaultContent[this.language]);\n        this.editor.getSession().setMode(\"ace/mode/\" + this.language.toLowerCase());\n    }\n\n    setLanguage(language: string): void {\n        this.language = language;\n        this.resetEditor();\n    }\n\n    submit(): void {\n        this.output = '';\n        const codes = {\n            userCodes: this.editor.getValue(),\n            lang: this.language.toLocaleLowerCase()\n        };\n        this.dataService.buildAndRun(codes)\n            .then((res: any) => this.output = res.text);\n    }\n    // todo: add cursor movement sync\n}\n","module.exports = \".navbar-brand img {\\n  height: 100%;\\n  padding: 8px;\\n  width: auto;\\n}\\n.navbar-brand {\\n  padding: 0px;\\n}\\n.navbar-brand span {\\n  padding-right: 8px;\\n  color: #F26551;\\n}\"","module.exports = \"<div class=\\\"container\\\">\\n<nav class=\\\"navbar navbar-default\\\">\\n  <div class=\\\"container-fluid\\\">\\n    <div class=\\\"navbar-header\\\">\\n      <button type=\\\"button\\\" class=\\\"navbar-toggle collapsed\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#bs-example-navbar-collapse-1\\\" aria-expanded=\\\"false\\\">\\n        <span class=\\\"sr-only\\\">Toggle navigation</span>\\n        <span class=\\\"icon-bar\\\"></span>\\n        <span class=\\\"icon-bar\\\"></span>\\n        <span class=\\\"icon-bar\\\"></span>\\n      </button>\\n      <a class=\\\"navbar-brand\\\" routerLink=\\\"/codegether/problems\\\"><span><img alt=\\\"Brand\\\" src=\\\"../../codegether/assets/favicon.ico\\\">Codegether</span></a>\\n    </div>\\n\\n    <div class=\\\"collapse navbar-collapse\\\" id=\\\"bs-example-navbar-collapse-1\\\">\\n      <ul class=\\\"nav navbar-nav\\\">\\n        <li class=\\\"active\\\"><a routerLink=\\\"/codegether/problems/new\\\">Add Problem<span class=\\\"sr-only\\\">(current)</span></a></li>\\n      </ul>\\n    </div><!-- /.navbar-collapse -->\\n  </div><!-- /.container-fluid -->\\n  </nav>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.css']\n})\nexport class NavbarComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \".form-box {\\n  width: 60%;\\n  margin: auto;\\n}\"","module.exports = \"<div class=\\\"container\\\">\\n  <div class=\\\"form-box\\\">\\n  <form #formRef=\\\"ngForm\\\">\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"problemName\\\">Problem Name</label>\\n      <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"problemName\\\"\\n             required placeholder=\\\"Problem name\\\"\\n             [(ngModel)]=\\\"newProblem.name\\\" name=\\\"problemName\\\">\\n          </div>\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"problemDesc\\\">Problem Description</label>\\n      <textarea type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"problemDesc\\\"\\n             required placeholder=\\\"Problem description\\\" name=\\\"problemDesc\\\" \\n             [(ngModel)]=\\\"newProblem.desc\\\" rows=\\\"6\\\"></textarea>\\n    </div>\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"difficulty\\\">Difficulty</label>\\n      <select class=\\\"form-control\\\" id=\\\"difficulty\\\" name=\\\"difficulty\\\"\\n              [(ngModel)]=\\\"newProblem.difficulty\\\">\\n        <option *ngFor=\\\"let difficulty of difficulties\\\" [value]=\\\"difficulty\\\">\\n          {{difficulty}}\\n        </option>\\n      </select>\\n    </div>\\n\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-md-12\\\">\\n        <button type=\\\"button\\\" class=\\\"btn btn-primary pull-right\\\"\\n                [disabled]=\\\"!formRef.form.valid\\\"\\n                (click)=\\\"addProblem()\\\">\\n          Add Problem\\n        </button>\\n      </div>\\n    </div>\\n    <br/>\\n\\n  </form>\\n  </div>  \\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { Problem } from '../../models/problem.model';\nimport { DataService } from '../../services/data.service';\nimport { Router } from '@angular/router';\n\nconst DEFAULT_PROBLEM: Problem = Object.freeze({\n  id: 0,\n  name: '',\n  desc: '',\n  difficulty: 'easy'\n});\n\n@Component({\n  selector: 'app-new-problem',\n  templateUrl: './new-problem.component.html',\n  styleUrls: ['./new-problem.component.css']\n})\nexport class NewProblemComponent implements OnInit {\n  newProblem: Problem = Object.assign({}, DEFAULT_PROBLEM);\n  difficulties: string[] = ['easy', 'medium', 'hard', 'super'];\n  \n  constructor(private router: Router, private dataService: DataService) { }\n\n  ngOnInit() {\n  }\n\n  addProblem() {\n    this.dataService.addProblem(this.newProblem); // todo: error handling\n    this.newProblem = Object.assign({}, DEFAULT_PROBLEM);\n    this.router.navigate(['/problems']);\n  }\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"container\\\" *ngIf=\\\"problem\\\">\\n  <div class=\\\"col-sm-12 col-md-4\\\">\\n    <div>\\n      <h2>\\n        {{ problem.id}}. {{ problem.name}}\\n      </h2>\\n      <p>\\n        {{ problem.desc }}\\n      </p>\\n      <br />\\n    </div>\\n  </div>\\n  <div class=\\\"col-sm-12 col-md-8\\\">\\n       <app-editor></app-editor>\\n  </div>\\n</div>\\n\\n\\n\"","import { Component, OnInit } from '@angular/core';\nimport { Problem } from '../../models/problem.model';\nimport { DataService } from '../../services/data.service';\nimport { ActivatedRoute, Params } from '@angular/router';\n\n@Component({\n  selector: 'app-problem-detail',\n  templateUrl: './problem-detail.component.html',\n  styleUrls: ['./problem-detail.component.css']\n})\nexport class ProblemDetailComponent implements OnInit {\n  problem: Problem;\n  constructor(private dataService: DataService, private route: ActivatedRoute) { }\n\n  ngOnInit() {\n    this.route.params.subscribe(params => {\n        this.dataService.getProblem(+params['id'])\n            .then(problem => this.problem = problem);\n    });\n  }\n\n}\n","module.exports = \".difficulty {\\n  min-width: 65px;\\n  margin-right: 10px;\\n}\\n\\n.label.difficulty {\\n  padding-top: 0.6em;\\n  color: #fbfdfa;\\n  font-size: 12px;\\n}\\n\\n.title {\\n  font-size: 1.2em;\\n}\\n\\n.diff-easy {\\n  background-color: #fcd09b;\\n}\\n\\n.diff-medium {\\n  background-color: #f59a23;\\n}\\n\\n.diff-hard {\\n  background-color: #f27326;\\n}\\n\\n.diff-super {\\n  background-color: #f1392a;\\n}\"","module.exports = \"<div class=\\\"container\\\">\\n  <div class=\\\"list-group\\\">\\n    <a class=\\\"list-group-item\\\" *ngFor=\\\"let problem of problems\\\"\\n      [routerLink]=\\\"['/codegether/problems', problem.id]\\\">\\n      <span class=\\\"{{'pull-left label difficulty diff-' + problem.difficulty.toLocaleLowerCase()}}\\\">\\n\\t{{ problem.difficulty }}\\n      </span>\\n      <strong class=\\\"title\\\">{{problem.id}}. {{problem.name}}</strong>\\n    </a>\\n  </div>\\n</div>\\n\\n\\n\"","import { Component, OnInit, Inject, OnDestroy } from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { Problem } from '../../models/problem.model';\nimport { DataService } from '../../services/data.service';\n\n@Component({\n  selector: 'app-problem-list',\n  templateUrl: './problem-list.component.html',\n  styleUrls: ['./problem-list.component.css']\n})\nexport class ProblemListComponent implements OnInit {\n  problems: Problem[];\n  subscriptionProblems: Subscription;\n  constructor(private dataService: DataService) { }\n\n  ngOnInit() {\n   this.getProblems();\n  }\n\n  ngOnDestroy() {\n    this.subscriptionProblems.unsubscribe();\n  }\n    \n  getProblems(): void {\n    this.subscriptionProblems = this.dataService.getProblems()\n    .subscribe(problems => this.problems = problems);\n  }\n\n}\n","import { Injectable } from '@angular/core';\n\ndeclare const io: any;\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CollaborationService {\n  collaborationSocket: any;\n  \n  constructor() { }\n\n    init(editor: any, sessionId: string): void {\n        this.collaborationSocket = io(window.location.origin, { path: '/codegether/socket.io', query: 'sessionId=' + sessionId });\n        console.log(\"collaboration service init\");\n        this.collaborationSocket.on('change', (delta: string) => {\n            delta = JSON.parse(delta);\n            editor.lastAppliedChange = delta;\n            editor.getSession().getDocument().applyDeltas([delta]);\n        });\n    }\n\n    change(delta: string): void {\n        this.collaborationSocket.emit('change', delta);\n    }\n\n    restoreBuffer(): void {\n        this.collaborationSocket.emit('restoreBuffer');\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpResponse } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { BehaviorSubject } from 'rxjs';\n\nimport { Problem } from '../models/problem.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DataService {\n  private _problemSource = new BehaviorSubject<Problem[]>([]);\n  \n  constructor(private httpClient: HttpClient) { }\n\n  getProblems(): Observable<Problem[]> {\n    this.httpClient.get('/codegether/api/v1/problems')\n      .toPromise()\n      .then((res: any) => {\n        this._problemSource.next(res);\n      })\n      .catch(this.handleError);\n      return this._problemSource.asObservable();\n  }\n\n  getProblem(id: number): Promise<Problem> {\n    return this.httpClient.get(`/codegether/api/v1/problems/${id}`)\n           .toPromise()\n           .then((res: any) => res)\n           .catch(this.handleError);\n  }\n\n  addProblem(problem: Problem) {\n    const options = { headers: new HttpHeaders({'Content-Type': 'application/json'})};\n    return this.httpClient.post('/codegether/api/v1/problems', problem, options)\n           .toPromise()\n           .then((res: any) => {\n             this.getProblems();\n             return res;\n           })\n           .catch(this.handleError);\n  }\n\n  private handleError(error: any): Promise<any> {\n    return Promise.reject(error.body || error);\n  }\n\n   buildAndRun(data: any): Promise<Object> {\n       const options = { headers: new HttpHeaders({'Content-Type': 'application/json'})};\n       return this.httpClient.post('/codegether/api/v1/problems/results', data, options)\n            .toPromise()\n           .then((res: any) => {\n               console.log('in client side build and run ');\n                return res;\n            })\n            .catch(this.handleError);\n    }\n}\n\n\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}